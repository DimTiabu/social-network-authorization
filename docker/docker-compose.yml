version: '3'
services:
  postgres:
    image: postgres:12.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      #      - POSTGRES_USER=postgre_user
      #      - POSTGRES_PASSWORD=postgre_secret_password
      - POSTGRES_DB=authorization_db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  kafka:
    image: confluentinc/cp-kafka:6.2.0
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO, kafka.producer.async.DefaultEventHandler=INFO, state.change.logger=INFO"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPIC_ENABLE: 'false'
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "32181:2181"
  redis:
    image: redis:7.0.12
    ports:
      - "6379:6379"

  frontend-service:
    image: dmitrtiab/social-network-frontend:latest
    ports:
      - "80:80"
    restart: always
    environment:
      - MAIL_USER=tdsuser45@mail.ru
      - MAIL_PASSWORD=n3c421ZcGyinuqdKJyie

    networks:
      - app-network

#  discovery-service:
#    image: dmitrtiab/social-network-discovery:latest
#    container_name: discovery-service
#    restart: always
#    ports:
#      - "8761:8761"
#    networks:
#      - app-network
#
#  config-service:
#    image: pashtet33/config-service:latest
#    container_name: config-service
#    restart: always
#    ports:
#      - "8888:8888"
#    networks:
#      - app-network
#    depends_on:
#      - discovery-service
#
#  gateway-service:
#    image: dmitrtiab/social-network-gateway:latest
#    container_name: gateway-service
#    restart: always
#    ports:
#      - "8080:8080"
#    networks:
#      - app-network
#    depends_on:
#      - config-service

networks:
  app-network:
    driver: bridge